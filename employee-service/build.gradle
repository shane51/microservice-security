plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.owasp.dependencycheck" version "6.2.2"
}

group = 'com.shane51'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    maven {
        url 'https://maven.aliyun.com/repository/public/'
    }
    maven {
        url 'https://maven.aliyun.com/repository/google'
    }
    maven {
        url 'https://maven.aliyun.com/repository/jcenter'
    }
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public'
    }
    mavenCentral()
}
ext {
    set('springCloudVersion', "2020.0.0")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

test {
    useJUnitPlatform()
}

bootRun {
    jvmArgs "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"
}

dependencyCheck {
    autoUpdate=false

    cve {
        urlModified="http://127.0.0.1/nvdcve-1.1-modified.json.gz"
        urlBase="http://127.0.0.1/nvdcve-1.1-2021.json.gz"
    }
    analyzers {
        retirejs {
            retireJsUrl="file:///${rootProject.projectDir.absolutePath}/jsrepository.json"
        }
    }
}